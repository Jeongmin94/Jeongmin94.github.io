<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>저장소</title>
    <link>https://jeongmin94.github.io/</link>
    <description>Recent content on 저장소</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 21 Jul 2022 09:55:17 +0900</lastBuildDate><atom:link href="https://jeongmin94.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reactive Streams</title>
      <link>https://jeongmin94.github.io/post/reactive-streams/</link>
      <pubDate>Thu, 21 Jul 2022 09:55:17 +0900</pubDate>
      
      <guid>https://jeongmin94.github.io/post/reactive-streams/</guid>
      <description>리액티브 스트림즈(Reactive Streams) 참고
https://engineering.linecorp.com/ko/blog/reactive-streams-with-armeria-1/
스프링 웹 프레임워크는 스프링 5 이후로 크게 두 가지 포트폴리오를 제공해준다. 하나는 서블릿 기반의 스프링 MVC이고, 다른 하나는 리액티브 스트림즈 기반의 스프링 WebFlux이다. WebFlux는 리액티브 스트림즈의 구현체인 Project Reactor 기반으로 구현이 되어 있기 때문에 WebFlux를 이해하기 위해선 리액티브 스트림즈에 대한 이해가 필요하다고 할 수 있다.
리액티브 프로그래밍 스프링의 리액티브 공식 페이지(https://spring.io/reactive)에서는 리액티브라는 단어의 뜻과 함께 리액티브 프로세싱에 대해서 설명을 해주고 있다.
Reactive
Reactive systems have certain characteristics that make them ideal for low-latency, high-throughput workloads.</description>
    </item>
    
    <item>
      <title>07 Kube Controller</title>
      <link>https://jeongmin94.github.io/post/07-kube-controller/</link>
      <pubDate>Mon, 18 Jul 2022 21:59:10 +0900</pubDate>
      
      <guid>https://jeongmin94.github.io/post/07-kube-controller/</guid>
      <description>쿠버네티스 컨트롤러 https://kubernetes.io/docs/concepts/architecture/controller
쿠번네티스의 컨트롤러는 특정 리소스를 지속적으로 바라보며 리소스의 생명주기에 따라 미리 정해진 작업을 수행하는 주체이다.
컨트롤러는 control-loop를 지속적으로 돌면서 특정 리소스를 관찰하는데, 이 때 중요하게 봐야하는 부분이 바로 바라는 상태와 현재 상태이다. 관찰 대상이 되는 리소스가 사용자의 요청에 따라 바라는 상태가 변경되고, 변경된 상태가 현재 상태와 달라지는 경우 컨트롤러가 현재 상태를 바라는 상태와 동일하게 만들 수 있도록 정해진 작업을 수행하게 된다.
컨트롤러는 특정 리소스의 상태를 바라는 상태로 만들기 위해 배치 작업을 수행하는 Pod를 생성하고, 이 Pod를 통해 특정 리소스의 현재 상태를 바라는 상태로 맞춰지게 만든다.</description>
    </item>
    
  </channel>
</rss>
